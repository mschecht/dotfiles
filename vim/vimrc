" adding a leader keyi
map <Space> <Leader>

" vim-plug: Vim plugin manager
" ============================
"
" Download plug.vim and put it in ~/.vim/autoload
"
"   curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
"     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

" this downloads vim-plug if its missing
if empty(glob("~/.vim/autoload/plug.vim"))
  silent! execute '!curl --create-dirs -fLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * silent! PlugInstall
endif

" declare plugins
silent! if plug#begin()

    Plug	'vim-syntastic/syntastic'
    Plug	'terryma/vim-multiple-cursors'
    Plug	'davidhalter/jedi-vim'
    Plug	'scrooloose/nerdtree'
    Plug	'vim-syntastic/syntastic'
    Plug	'godlygeek/tabular'
    Plug	'airblade/vim-gitgutter'

  call plug#end()
endif


" Adjusting how Vim looks
set number
set relativenumber

" Scroll through Ctrl+n autocomplete with jk
"inoremap pumvisible() ?	"\<C-n>" : "j"
"inoremap pumvisible() ?	"\<C-p>" : "k"

set wildmode=longest,list,full
set wildmenu
set smartindent
set noswapfile
set hidden
set list
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab
set backspace=2

set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set list

syntax on

set background=dark

" Allow copying to system clipboard
set clipboard=unnamed

" Mouse magic
set mouse=a

" remap NERDTree to ctrl-n
:map <C-n> :NERDTree

" automatically start vim if no file is specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Instant Markdown
" manually start markdown preview in browser
let g:instant_markdown_autostart = 0
:map <C-i> :InstantMarkdownPreview

" Multipule cursors
let g:multi_cursor_use_default_mapping=0

" Default mapping
let g:multi_cursor_start_word_key      = '<C-m>'
let g:multi_cursor_select_all_word_key = '<A-n>'
let g:multi_cursor_start_key           = 'g<C-n>'
let g:multi_cursor_select_all_key      = 'g<A-n>'
let g:multi_cursor_next_key            = '<C-m>'
let g:multi_cursor_prev_key            = '<C-p>'
let g:multi_cursor_skip_key            = '<C-x>'
" let g:multi_cursor_quit_key            = '<Esc>'

" plasticboy/vim-markdown disable text folding 
let g:vim_markdown_folding_disabled = 1

"
" Python stuff
"
" Credit: https://realpython.com/vim-and-python-a-match-made-in-heaven/

au BufNewFile,BufRead *.py set syntax=python

" PEP8
"au BufNewFile,BufRead *.py
"    \ set tabstop=4
"    \ set softtabstop=4
"    \ set shiftwidth=4
"    \ set textwidth=79
"    \ set expandtab
"    \ set autoindent
"    \ set fileformat=unix

" SNAKEMAKE syntax highlighting
" Credit: https://snakemake.readthedocs.io/en/stable/project_info/faq.html#how-do-i-enable-syntax-highlighting-in-vim-for-snakefiles
au BufNewFile,BufRead Snakefile set syntax=snakemake
au BufNewFile,BufRead *.smk set syntax=snakemake

"set encoding=utf-8

let python_highlight_all=1

let g:powerline_pycmd = 'py3'

" Automatic reloading of vimrc when you save
autocmd! bufwritepost .vimrc source %

" edit vimrc quickly
nnoremap <leader>ev :split ~/dotfiles/vim/vimrc<cr>


